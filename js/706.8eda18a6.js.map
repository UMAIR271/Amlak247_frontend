{"version":3,"file":"js/706.8eda18a6.js","mappings":"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","sources":["webpack://frontend/./src/views/test1View.vue","webpack://frontend/./src/views/test1View.vue?5c58"],"sourcesContent":["<template>\n  <div>\n    <h1>Agora RTM Vue.js Example</h1>\n    <p>Current user ID: {{ currentUserID }}</p>\n    <p>Recipient user ID: {{ recipientUserID }}</p>\n    <div class=\"msg_cotainer_send\" v-for=\"msg in sendMessageList\" :key=\"msg\">\n      {{ msg }}\n    </div>\n    <div\n      class=\"msg_cotainer_send\"\n      v-for=\"msg in receivedMessageList\"\n      :key=\"msg\"\n    >\n      {{ msg }}\n    </div>\n    <div class=\"msg_cotainer_send\" v-for=\"msg in chatInbox\" :key=\"msg.id\">\n      {{ msg.chat_profile.sender_id }}\n    </div>\n    <input type=\"text\" v-model=\"message\" placeholder=\"Enter a message\" />\n    <button @click=\"sendMessage\">Send message to {{ recipientUserID }}</button>\n  </div>\n</template>\n\n<script>\nimport AgoraRTM from \"agora-rtm-sdk\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      client: null,\n      currentUserID: \"<YOUR_USER_ID>\",\n      recipientUserID: \"4\",\n      message: \"\",\n      token: \"\",\n      sendMessageList: [],\n      receivedMessageList: [],\n      chatInbox: [],\n    };\n  },\n\n  mounted() {\n    this.currentUserID = localStorage.getItem(\"user_id\");\n    this.token = localStorage.getItem(\"token\");\n    const client = AgoraRTM.createInstance(\"21c61a1aa5d44cc09fda7e95b43561a2\");\n    this.recivedMessageToServer();\n    client\n      .login({ token: null, uid: this.currentUserID })\n      .then(() => {\n        console.log(\"Logged in to Agora RTM successfully\");\n      })\n      .catch((error) => {\n        console.log(\"Failed to log in to Agora RTM\", error);\n      });\n    client.on(\"MessageFromPeer\", (message, peerId) => {\n      console.log(`Received message from ${peerId}: ${message.text}`);\n      this.receivedMessageList.push(message.text);\n    });\n    this.client = client;\n  },\n\n  methods: {\n    sendMessage() {\n      const message = { text: this.message };\n      this.client\n        .sendMessageToPeer(message, this.recipientUserID)\n        .then(() => {\n          console.log(\"Message sent successfully\");\n          console.log(message.text);\n          this.sendMessageList.push(message.text);\n          this.sendToServer(message);\n        })\n        .catch((error) => {\n          console.log(\"Failed to send message\", error);\n        });\n    },\n\n    sendToServer(message) {\n      const config = {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + this.token,\n        },\n      };\n      axios\n        .post(\n          \"https://umair2701.pythonanywhere.com/chat/api/send_messages/\",\n          {\n            message: message.text,\n            receiver: this.recipientUserID,\n            message_type: \"text\",\n          },\n          config\n        )\n        .then(() => {\n          console.log(\"Message sent to server successfully\");\n        })\n        .catch((error) => {\n          console.log(\"Failed to send message to server\", error);\n        });\n    },\n    async recivedMessageToServer() {\n      const config = {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + this.token,\n        },\n      };\n\n      try {\n        const response = await axios.get(\n          \"https://umair2701.pythonanywhere.com/chat/api/get_chat_inbox/\",\n          config\n        );\n        console.log(\"get_chat_inbox\", response.data);\n        this.chatInbox = response.data;\n        console.log(\"Message sent to server successfully\");\n      } catch (error) {\n        console.log(\"Failed to send message to server\", error);\n      }\n    },\n  },\n\n  beforeUnmount() {\n    this.client\n      .logout()\n      .then(() => {\n        console.log(\"Logged out of Agora RTM successfully\");\n      })\n      .catch((error) => {\n        console.log(\"Failed to log out of Agora RTM\", error);\n      });\n  },\n};\n</script>\n","import { render } from \"./test1View.vue?vue&type=template&id=8415c9b4\"\nimport script from \"./test1View.vue?vue&type=script&lang=js\"\nexport * from \"./test1View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/umair/Documents/Django/vue/Amlakapp/Amlakvue-app/property/node_modules/.pnpm/vue-loader@17.0.0_webpack@5.74.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$data","_Fragment","_renderList","msg","class","key","id","chat_profile","sender_id","type","$event","placeholder","onClick","$options","data","client","currentUserID","recipientUserID","message","token","sendMessageList","receivedMessageList","chatInbox","mounted","this","localStorage","getItem","AgoraRTM","recivedMessageToServer","login","uid","then","console","log","catch","error","on","peerId","text","push","methods","sendMessage","sendMessageToPeer","sendToServer","config","headers","Accept","Authorization","axios","receiver","message_type","async","response","beforeUnmount","logout","__exports__","render"],"sourceRoot":""}